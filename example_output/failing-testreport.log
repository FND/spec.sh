=== RUN it_should_support_defer_even_on_fails
--- FAIL: it_should_support_defer_even_on_fails (0.01s)
	+ it_should_support_defer_even_on_fails
	+ echo hallo
	+ defer rm out
	+ __DEFERRED_CALLS='rm out; '
	+ assert 'test -e out'
	+ '[' -z '' ']'
	+ test -e out
	+ got=0
	+ expected=0
	+ description='expecting command '\''test -e out'\'' to succeed'
	+ set +x
	######################################## PASSED TEST: expecting command 'test -e out' to succeed ('0' == '0') 
	+ assert 0 1
	+ '[' -z 1 ']'
	+ got=0
	+ expected=1
	+ description=
	+ set +x
	failed expectation: '0' == '1' 
	%%%%%%%%%%%%%%%%%%%% executing defer commands: 'eval "rm out; " &> /dev/null'
	+ exit 1
	error code: 1
	error occured in it_should_support_defer_even_on_fails
=== RUN it_should_execute_command
--- FAIL: it_should_execute_command (0.00s)
	+ it_should_execute_command
	+ assert 'ls /xxxtmp'
	+ '[' -z '' ']'
	+ ls /xxxtmp
	ls: /xxxtmp: No such file or directory
	+ got=1
	+ expected=0
	+ description='expecting command '\''ls /xxxtmp'\'' to succeed'
	+ set +x
	failed expectation: expecting command 'ls /xxxtmp' to succeed ('1' == '0') 
	+ exit 1
	error code: 1
	error occured in it_should_execute_command
=== RUN it_should_reflect_exit_code
--- FAIL: it_should_reflect_exit_code (0.00s)
	+ it_should_reflect_exit_code
	+ return 3
	error code: 3
	error occured in it_should_reflect_exit_code
=== RUN it_should_match_exit_code
--- FAIL: it_should_match_exit_code (0.00s)
	+ it_should_match_exit_code
	+ false
	+ assert 0 0
	+ '[' -z 0 ']'
	+ got=0
	+ expected=0
	+ description=
	+ set +x
	######################################## PASSED TEST: '0' == '0' 
	+ assert 0 0 '0 should be 0'
	+ '[' -z 0 ']'
	+ got=0
	+ expected=0
	+ description='0 should be 0'
	+ set +x
	######################################## PASSED TEST: 0 should be 0 ('0' == '0') 
	+ assert 0 2
	+ '[' -z 2 ']'
	+ got=0
	+ expected=2
	+ description=
	+ set +x
	failed expectation: '0' == '2' 
	+ exit 1
	error code: 1
	error occured in it_should_match_exit_code
=== RUN it_should_match_string
--- FAIL: it_should_match_string (0.00s)
	+ it_should_match_string
	++ echo hallo
	++ tr l x
	+ assert haxxo haggo
	+ '[' -z haggo ']'
	+ got=haxxo
	+ expected=haggo
	+ description=
	+ set +x
	failed expectation: 'haxxo' == 'haggo' 
	+ exit 1
	error code: 1
	error occured in it_should_match_string
=== RUN it_should_match_string_with_description
--- FAIL: it_should_match_string_with_description (0.00s)
	+ it_should_match_string_with_description
	++ echo hallo
	++ tr l x
	+ assert haxxo haggo 'transforming string should work'
	+ '[' -z haggo ']'
	+ got=haxxo
	+ expected=haggo
	+ description='transforming string should work'
	+ set +x
	failed expectation: transforming string should work ('haxxo' == 'haggo') 
	+ exit 1
	error code: 1
	error occured in it_should_match_string_with_description
=== RUN it_should_match_regexp
--- FAIL: it_should_match_regexp (0.31s)
	+ it_should_match_regexp
	+ sleep 0.3
	+ assert_match aaa:88X09 'aaa:[0-9]{5}'
	+ set +o pipefail
	+ printf aaa:88X09
	+ grep -E -m1 -o 'aaa:[0-9]{5}'
	+ head -n1
	+ grep -E 'aaa:[0-9]{5}'
	+ assert 1 0 'checking '\''aaa:88X09'\'' to match /aaa:[0-9]{5}/'
	+ '[' -z 0 ']'
	+ got=1
	+ expected=0
	+ description='checking '\''aaa:88X09'\'' to match /aaa:[0-9]{5}/'
	+ set +x
	failed expectation: checking 'aaa:88X09' to match /aaa:[0-9]{5}/ ('1' == '0') 
	+ exit 1
	error code: 1
	error occured in it_should_match_regexp
=== RUN it_should_have_seven_failing_tests
--- FAIL: it_should_have_seven_failing_tests (0.00s)
	+ it_should_have_seven_failing_tests
	+ assert 1 2
	+ '[' -z 2 ']'
	+ got=1
	+ expected=2
	+ description=
	+ set +x
	failed expectation: '1' == '2' 
	+ exit 1
	error code: 1
	error occured in it_should_have_seven_failing_tests
=== RUN after_all
--- PASS: after_all (0.00s)
FAIL
exit status 8
FAIL	./failing-tests.sh	0.540s
